{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nexport var winCheck = function winCheck(squares) {\n  var winningPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (var i = 0; i < winningPatterns.length; i++) {\n    var _winningPatterns$i = _slicedToArray(winningPatterns[i], 3),\n      a = _winningPatterns$i[0],\n      b = _winningPatterns$i[1],\n      c = _winningPatterns$i[2];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};","map":{"version":3,"names":["winCheck","squares","winningPatterns","i","length","a","b","c"],"sources":["/Users/davidabenhaim/Documents/GitHub/react-native-tic-tac-toe/src/utils/helpers.ts"],"sourcesContent":["export const winCheck = (squares: string[]): string | null => {\n  const winningPatterns = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < winningPatterns.length; i++) {\n    const [a, b, c] = winningPatterns[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n"],"mappings":";AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,OAAiB,EAAoB;EAC5D,IAAMC,eAAe,GAAG,CACtB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,eAAe,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/C,wCAAkBD,eAAe,CAACC,CAAC,CAAC;MAA7BE,CAAC;MAAEC,CAAC;MAAEC,CAAC;IACd,IAAIN,OAAO,CAACI,CAAC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACK,CAAC,CAAC,IAAIL,OAAO,CAACI,CAAC,CAAC,KAAKJ,OAAO,CAACM,CAAC,CAAC,EAAE;MACxE,OAAON,OAAO,CAACI,CAAC,CAAC;IACnB;EACF;EACA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module"}