{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Constants from 'expo-constants';\nimport { ANDROID } from \"./src/utils/constants\";\nimport GameIndex from \"./src/components/Game/Index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar statusBarHeightIOS = Constants.statusBarHeight;\nvar statusBarHeightAndroid = StatusBar.currentHeight;\nvar HomeScreen = function HomeScreen() {\n  return _jsx(GameIndex, {});\n};\nvar DetailsScreen = function DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Details\"\n    })\n  });\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        title: 'Apply to all'\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: Platform.OS == ANDROID ? statusBarHeightAndroid : statusBarHeightIOS,\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: 'blue'\n  },\n  brick: {\n    flex: 1,\n    backgroundColor: 'white',\n    margin: 5,\n    aspectRatio: 1\n  },\n  button: {\n    flex: 1\n  },\n  test: {\n    flex: 1,\n    backgroundColor: 'red'\n  },\n  centerContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  image: {\n    height: 100,\n    width: 100\n  }\n});\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","Constants","ANDROID","GameIndex","Stack","statusBarHeightIOS","statusBarHeight","statusBarHeightAndroid","StatusBar","currentHeight","HomeScreen","DetailsScreen","flex","alignItems","justifyContent","App","title","styles","StyleSheet","create","container","marginTop","Platform","OS","backgroundColor","row","flexDirection","brick","margin","aspectRatio","button","test","centerContainer","height","image","width"],"sources":["/Users/davidabenhaim/Documents/GitHub/react-native-tic-tac-toe/App.tsx"],"sourcesContent":["// @ React\nimport React from 'react';\n\n// @ React Native\nimport { NavigationContainer } from '@react-navigation/native';\nimport { StyleSheet, Image, View, StatusBar, Platform, Text } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// @ constants\nimport Constants from 'expo-constants';\nimport { ANDROID } from './src/utils/constants';\nimport MainGame from './src/components/MainGame';\nimport GameIndex from './src/components/Game/Index';\n\nconst Stack = createNativeStackNavigator();\nconst statusBarHeightIOS = Constants.statusBarHeight;\nconst statusBarHeightAndroid = StatusBar.currentHeight;\n\nconst HomeScreen = () => (\n  <GameIndex />\n);\n\nconst DetailsScreen = () => (\n  <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text>Details</Text>\n  </View>\n);\n\nconst App = () => (\n  <NavigationContainer>\n    <Stack.Navigator screenOptions={{ title: 'Apply to all' }}>\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n      <Stack.Screen name=\"Details\" component={DetailsScreen} />\n    </Stack.Navigator>\n  </NavigationContainer>\n)\n\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: Platform.OS == ANDROID ? statusBarHeightAndroid : statusBarHeightIOS,\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: 'blue',\n  },\n  brick: {\n    flex: 1,\n    backgroundColor: 'white',\n    margin: 5,\n    aspectRatio: 1\n  },\n  button: {\n    flex: 1,\n  },\n  test: {\n    flex: 1,\n    backgroundColor: 'red',\n  },\n  centerContainer: {\n    flex: 1,\n    // backgroundColor: 'red',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  image: {\n    // backgroundColor: 'blue',\n    height: 100,\n    width: 100,\n  }\n});\n\nexport default App\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAAA;AAAA;AAE/D,SAASC,0BAA0B,QAAQ,gCAAgC;AAG3E,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SAASC,OAAO;AAEhB,OAAOC,SAAS;AAAoC;AAAA;AAEpD,IAAMC,KAAK,GAAGJ,0BAA0B,EAAE;AAC1C,IAAMK,kBAAkB,GAAGJ,SAAS,CAACK,eAAe;AACpD,IAAMC,sBAAsB,GAAGC,SAAS,CAACC,aAAa;AAEtD,IAAMC,UAAU,GAAG,SAAbA,UAAU;EAAA,OACd,KAAC,SAAS,KAAG;AAAA,CACd;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAa;EAAA,OACjB,KAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,UACvE,KAAC,IAAI;MAAA,UAAC;IAAO;EAAO,EACf;AAAA,CACR;AAED,IAAMC,GAAG,GAAG,SAANA,GAAG;EAAA,OACP,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAC,aAAa,EAAE;QAAEC,KAAK,EAAE;MAAe,CAAE;MAAA,WACxD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEN;MAAW,EAAG,EACnD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEC;MAAc,EAAG;IAAA;EACzC,EACE;AAAA,CACvB;AAGD,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,SAAS,EAAEC,QAAQ,CAACC,EAAE,IAAIrB,OAAO,GAAGK,sBAAsB,GAAGF,kBAAkB;IAC/EO,IAAI,EAAE,CAAC;IACPY,eAAe,EAAE;EACnB,CAAC;EACDC,GAAG,EAAE;IACHC,aAAa,EAAE,KAAK;IACpBF,eAAe,EAAE;EACnB,CAAC;EACDG,KAAK,EAAE;IACLf,IAAI,EAAE,CAAC;IACPY,eAAe,EAAE,OAAO;IACxBI,MAAM,EAAE,CAAC;IACTC,WAAW,EAAE;EACf,CAAC;EACDC,MAAM,EAAE;IACNlB,IAAI,EAAE;EACR,CAAC;EACDmB,IAAI,EAAE;IACJnB,IAAI,EAAE,CAAC;IACPY,eAAe,EAAE;EACnB,CAAC;EACDQ,eAAe,EAAE;IACfpB,IAAI,EAAE,CAAC;IAEPc,aAAa,EAAE,QAAQ;IACvBZ,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpBoB,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IAELD,MAAM,EAAE,GAAG;IACXE,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAepB,GAAG"},"metadata":{},"sourceType":"module"}