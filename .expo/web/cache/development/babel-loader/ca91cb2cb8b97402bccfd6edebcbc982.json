{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Constants from 'expo-constants';\nimport { ANDROID, SQUARES_COUNT } from \"../utils/constants\";\nimport images from \"../../ImgBundler\";\nimport { winCheck } from \"../utils/helpers\";\nimport GameBrick from \"./GameBrick\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar statusBarHeightIOS = Constants.statusBarHeight;\nvar statusBarHeightAndroid = StatusBar.currentHeight;\nvar MainGame = function MainGame() {\n  var _useState = useState(Array(SQUARES_COUNT).fill(null)),\n    _useState2 = _slicedToArray(_useState, 2),\n    squares = _useState2[0],\n    setSquares = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isX = _useState4[0],\n    setIsX = _useState4[1];\n  var handleRestart = function handleRestart() {\n    setIsX(true);\n    setSquares(Array(SQUARES_COUNT).fill(null));\n  };\n  var handleClick = function handleClick(i) {\n    if (winCheck(squares) || squares[i]) return;\n    var newSquares = _toConsumableArray(squares);\n    newSquares[i] = isX ? 'X' : 'O';\n    setSquares(newSquares);\n    setIsX(function (prevState) {\n      return !prevState;\n    });\n  };\n  var getCorrectImage = function getCorrectImage() {\n    var winner = winCheck(squares);\n    var status = winner ? \"Winner is: \" + winner : \"Next Player: \" + (isX ? 'X' : 'O');\n    if (winner) {\n      return status === \"Winner: X\" ? images.xwin : images.owin;\n    } else {\n      return isX ? images.xplay : images.oplay;\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.row,\n      children: [_jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(0);\n        },\n        value: squares[0]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(1);\n        },\n        value: squares[1]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(2);\n        },\n        value: squares[2]\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(3);\n        },\n        value: squares[3]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(4);\n        },\n        value: squares[4]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(5);\n        },\n        value: squares[5]\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(6);\n        },\n        value: squares[6]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(7);\n        },\n        value: squares[7]\n      }), _jsx(GameBrick, {\n        onClick: function onClick() {\n          return handleClick(8);\n        },\n        value: squares[8]\n      })]\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(Image, {\n        source: getCorrectImage()\n      })\n    }), _jsx(View, {\n      style: styles.centerContainer,\n      children: _jsxs(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleRestart,\n        children: [_jsx(Text, {\n          children: \"Restart Game\"\n        }), _jsx(Image, {\n          source: images.reset,\n          style: styles.image\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    flex: 1\n  },\n  container: {\n    marginTop: Platform.OS == ANDROID ? statusBarHeightAndroid : statusBarHeightIOS,\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  centerContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  image: {\n    height: 100,\n    width: 100\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: 'blue'\n  }\n});\nexport default MainGame;","map":{"version":3,"names":["React","useState","Constants","ANDROID","SQUARES_COUNT","images","winCheck","GameBrick","statusBarHeightIOS","statusBarHeight","statusBarHeightAndroid","StatusBar","currentHeight","MainGame","Array","fill","squares","setSquares","isX","setIsX","handleRestart","handleClick","i","newSquares","prevState","getCorrectImage","winner","status","xwin","owin","xplay","oplay","styles","container","row","centerContainer","button","reset","image","StyleSheet","create","flex","marginTop","Platform","OS","backgroundColor","flexDirection","justifyContent","alignItems","height","width"],"sources":["/Users/davidabenhaim/Documents/GitHub/react-native-tic-tac-toe/src/components/MainGame.tsx"],"sourcesContent":["// React\nimport React from 'react';\nimport { useState } from 'react';\n\n// @ React Native\nimport {\n  StyleSheet,\n  Image,\n  View,\n  StatusBar,\n  Platform,\n  TouchableOpacity,\n  Text\n} from 'react-native';\n\n// @ Constants\nimport Constants from 'expo-constants';\nimport { ANDROID, SQUARES_COUNT } from '../utils/constants';\nimport images from '../../ImgBundler';\n\n// @ Utils\nimport { winCheck } from '../utils/helpers';\n\n// @ Custom Components\nimport GameBrick from './GameBrick';\n\nconst statusBarHeightIOS = Constants.statusBarHeight;\nconst statusBarHeightAndroid = StatusBar.currentHeight;\n\nconst MainGame = () => {\n\n  const [squares, setSquares] = useState(Array(SQUARES_COUNT).fill(null))\n\n  const [isX, setIsX] = useState(true);\n\n  const handleRestart = () => {\n    setIsX(true)\n    setSquares(Array(SQUARES_COUNT).fill(null))\n  }\n\n  const handleClick = (i: number) => {\n    if (winCheck(squares) || squares[i]) return;\n\n    const newSquares = [...squares]\n    newSquares[i] = isX ? 'X' : 'O';\n\n    setSquares(newSquares)\n    setIsX(prevState => !prevState)\n  }\n\n  const getCorrectImage = (): any => {\n    const winner = winCheck(squares)\n    let status = winner ? `Winner is: ${winner}` : `Next Player: ${isX ? 'X' : 'O'}`;\n\n    if (winner) {\n      return status === `Winner: X` ? images.xwin : images.owin\n    } else {\n      return isX ? images.xplay : images.oplay\n    }\n\n  }\n\n  return (\n    <View style={styles.container}>\n\n      <View style={styles.row}>\n        <GameBrick onClick={() => handleClick(0)} value={squares[0]} />\n        <GameBrick onClick={() => handleClick(1)} value={squares[1]} />\n        <GameBrick onClick={() => handleClick(2)} value={squares[2]} />\n      </View>\n\n      <View style={styles.row}>\n        <GameBrick onClick={() => handleClick(3)} value={squares[3]} />\n        <GameBrick onClick={() => handleClick(4)} value={squares[4]} />\n        <GameBrick onClick={() => handleClick(5)} value={squares[5]} />\n      </View>\n\n      <View style={styles.row}>\n        <GameBrick onClick={() => handleClick(6)} value={squares[6]} />\n        <GameBrick onClick={() => handleClick(7)} value={squares[7]} />\n        <GameBrick onClick={() => handleClick(8)} value={squares[8]} />\n      </View>\n\n      <View style={styles.container}>\n        <Image source={getCorrectImage()} />\n      </View>\n\n      <View style={styles.centerContainer}>\n        <TouchableOpacity style={styles.button} onPress={handleRestart}>\n          <Text>Restart Game</Text>\n          <Image source={images.reset} style={styles.image}></Image>\n        </TouchableOpacity>\n      </View>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  container: {\n    marginTop: Platform.OS == ANDROID ? statusBarHeightAndroid : statusBarHeightIOS,\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  centerContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  },\n  image: {\n    height: 100,\n    width: 100,\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: 'blue',\n  },\n});\n\nexport default MainGame\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}