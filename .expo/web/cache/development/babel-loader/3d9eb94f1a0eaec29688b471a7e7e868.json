{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Brick = function Brick(props) {\n  var index = props.index,\n    onBrickClick = props.onBrickClick,\n    turn = props.turn,\n    pressed = props.pressed,\n    gameOver = props.gameOver;\n  var updatedPressed = _toConsumableArray(pressed);\n  var onClick = function onClick() {\n    if (gameOver) {\n      Alert.alert(\"Please Reset the game\");\n      return;\n    } else if (pressed[index] !== 0) {\n      Alert.alert(\"Cannot press this one\");\n      return;\n    }\n    updatedPressed[index] = turn === 1 ? 1 : 2;\n    onBrickClick(updatedPressed);\n  };\n  var getBackground = function getBackground() {\n    if (pressed[index] === 1) {\n      return \"#D6E4E5\";\n    } else if (pressed[index] === 2) {\n      return \"#DFF6FF\";\n    } else {\n      return \"white\";\n    }\n  };\n  return _jsx(View, {\n    style: styles.brick,\n    children: _jsxs(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: getBackground()\n      }],\n      onPress: onClick,\n      children: [pressed[index] === 1 && _jsx(Image, {\n        style: styles.img,\n        source: require(\"./assets/x.png\")\n      }), pressed[index] === 2 && _jsx(Image, {\n        style: styles.img,\n        source: require(\"./assets/circle.png\")\n      })]\n    })\n  });\n};\nexport default Brick;\nvar styles = StyleSheet.create({\n  brick: {\n    flex: 1,\n    backgroundColor: \"white\",\n    margin: 5,\n    aspectRatio: 1\n  },\n  button: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  img: {\n    width: 75,\n    height: 75\n  }\n});","map":{"version":3,"names":["React","Brick","props","index","onBrickClick","turn","pressed","gameOver","updatedPressed","onClick","Alert","alert","getBackground","styles","brick","button","backgroundColor","img","require","StyleSheet","create","flex","margin","aspectRatio","justifyContent","alignItems","width","height"],"sources":["/Users/davidabenhaim/Documents/GitHub/react-native-tic-tac-toe/src/components/Game/Brick.tsx"],"sourcesContent":["import React from 'react'\nimport { FC } from \"react\";\n\nimport { Alert, StyleSheet, TouchableOpacity, View, Image } from \"react-native\";\n\nconst Brick: FC<{\n    turn: number;\n    index: number;\n    onBrickClick: (updatedPressed: number[]) => void;\n    pressed: number[];\n    gameOver: boolean;\n}> = (props) => {\n    const { index, onBrickClick, turn, pressed, gameOver } = props;\n    const updatedPressed: number[] = [...pressed];\n\n    const onClick = () => {\n        if (gameOver) {\n            Alert.alert(\"Please Reset the game\");\n            return;\n        } else if (pressed[index] !== 0) {\n            Alert.alert(\"Cannot press this one\");\n            return;\n        }\n        updatedPressed[index] = turn === 1 ? 1 : 2;\n        onBrickClick(updatedPressed);\n    };\n\n    const getBackground = () => {\n        if (pressed[index] === 1) {\n            return \"#D6E4E5\";\n        } else if (pressed[index] === 2) {\n            return \"#DFF6FF\";\n        } else {\n            return \"white\";\n        }\n    };\n\n    return (\n        <View style={styles.brick}>\n            <TouchableOpacity\n                style={[styles.button, { backgroundColor: getBackground() }]}\n                onPress={onClick}\n            >\n                {pressed[index] === 1 && (\n                    <Image style={styles.img} source={require(`./assets/x.png`)}></Image>\n                )}\n                {pressed[index] === 2 && (\n                    <Image\n                        style={styles.img}\n                        source={require(`./assets/circle.png`)}\n                    ></Image>\n                )}\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default Brick;\n\nconst styles = StyleSheet.create({\n    brick: {\n        flex: 1,\n        backgroundColor: \"white\",\n        margin: 5,\n        aspectRatio: 1,\n    },\n    button: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    img: {\n        width: 75,\n        height: 75,\n    },\n});"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzB,IAAMC,KAMJ,GAAG,SANCA,KAMJ,CAAIC,KAAK,EAAK;EACZ,IAAQC,KAAK,GAA4CD,KAAK,CAAtDC,KAAK;IAAEC,YAAY,GAA8BF,KAAK,CAA/CE,YAAY;IAAEC,IAAI,GAAwBH,KAAK,CAAjCG,IAAI;IAAEC,OAAO,GAAeJ,KAAK,CAA3BI,OAAO;IAAEC,QAAQ,GAAKL,KAAK,CAAlBK,QAAQ;EACpD,IAAMC,cAAwB,sBAAOF,OAAO,CAAC;EAE7C,IAAMG,OAAO,GAAG,SAAVA,OAAO,GAAS;IAClB,IAAIF,QAAQ,EAAE;MACVG,KAAK,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACpC;IACJ,CAAC,MAAM,IAAIL,OAAO,CAACH,KAAK,CAAC,KAAK,CAAC,EAAE;MAC7BO,KAAK,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACpC;IACJ;IACAH,cAAc,CAACL,KAAK,CAAC,GAAGE,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;IAC1CD,YAAY,CAACI,cAAc,CAAC;EAChC,CAAC;EAED,IAAMI,aAAa,GAAG,SAAhBA,aAAa,GAAS;IACxB,IAAIN,OAAO,CAACH,KAAK,CAAC,KAAK,CAAC,EAAE;MACtB,OAAO,SAAS;IACpB,CAAC,MAAM,IAAIG,OAAO,CAACH,KAAK,CAAC,KAAK,CAAC,EAAE;MAC7B,OAAO,SAAS;IACpB,CAAC,MAAM;MACH,OAAO,OAAO;IAClB;EACJ,CAAC;EAED,OACI,KAAC,IAAI;IAAC,KAAK,EAAEU,MAAM,CAACC,KAAM;IAAA,UACtB,MAAC,gBAAgB;MACb,KAAK,EAAE,CAACD,MAAM,CAACE,MAAM,EAAE;QAAEC,eAAe,EAAEJ,aAAa;MAAG,CAAC,CAAE;MAC7D,OAAO,EAAEH,OAAQ;MAAA,WAEhBH,OAAO,CAACH,KAAK,CAAC,KAAK,CAAC,IACjB,KAAC,KAAK;QAAC,KAAK,EAAEU,MAAM,CAACI,GAAI;QAAC,MAAM,EAAEC,OAAO;MAAmB,EAC/D,EACAZ,OAAO,CAACH,KAAK,CAAC,KAAK,CAAC,IACjB,KAAC,KAAK;QACF,KAAK,EAAEU,MAAM,CAACI,GAAI;QAClB,MAAM,EAAEC,OAAO;MAAwB,EAE9C;IAAA;EACc,EAChB;AAEf,CAAC;AAED,eAAejB,KAAK;AAEpB,IAAMY,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC7BN,KAAK,EAAE;IACHO,IAAI,EAAE,CAAC;IACPL,eAAe,EAAE,OAAO;IACxBM,MAAM,EAAE,CAAC;IACTC,WAAW,EAAE;EACjB,CAAC;EACDR,MAAM,EAAE;IACJM,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDR,GAAG,EAAE;IACDS,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}